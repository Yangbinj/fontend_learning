/* 选择器的优先级：
important>内联>id>class = 属性 = 伪类 >标签 = 伪元素 > 通配符（*）
important声明 1,0,0,0
ID选择器 0,1,0,0
类选择器 0,0,1,0
伪类选择器 0,0,1,0
属性选择器 0,0,1,0
标签选择器 0,0,0,1
伪元素选择器 0,0,0,1
通配符选择器 0,0,0,0
*/

/* id选择器 */
#id_selector{
    background-color: aqua;
}

/* class选择器  也可以写：p.class_selector等等*/
.class_selector{
    background-color: blue;
}

/* 元素选择器 标签选择器*/
span{
    background-color: red;
}

/* 通配符选择器 优先级最低 0 */
*{
    color:gray;
}

/* 分组选择器：应用到这两个选择器所引用的元素 */
h1,p{
    background-color: yellow;
}

/* 后代选择器：所声明的样式仅对h2下面的p生效 */
h2 p{
    background-color: blue;
}


/* 属性选择器 */
a[href]{
    color: blue;
}

/* 子元素选择器:他和后代选择器的主要区别是：后代选择器是应用到所有的后代，而子元素选择器只影响直接后代 */
h1 > strong{
    background-color: black;
}

/* 相邻选择器 */
h3 + p{
    background-color: cadetblue;
}

.pseudo_classes,p a{
    background-color: white;
}

/* CSS 伪类用于向某些选择器添加特殊的效果。 */
p a:link {color: #FF0000}		/* 未访问的链接 */
p a:visited {color: #00FF00}	/* 已访问的链接 */
p a:hover {color: #FF00FF}	/* 鼠标移动到链接上 */
p a:active {color: #0000FF}	/* 选定的链接 */

/* 使用 :first-child 伪类来选择元素的第一个子元素,必须有空格 */
li :first-child{
    background-color: yellow;
    text-transform:uppercase;
}

/* :lang 伪类使你有能力为不同的语言定义特殊的规则。在下面的例子中，:lang 类为属性值为 no 的 q 元素定义引号的类型： */
q:lang(no)
{
   quotes: "~" "~"
}

/* CSS 伪元素用于向某些选择器设置特殊效果。 必须无空格 */
h4:first-letter{
    background-color: yellow;
    text-transform:uppercase;
}